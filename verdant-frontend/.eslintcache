[{"/home/l/verdant/verdant-frontend/src/index.js":"1","/home/l/verdant/verdant-frontend/src/App.js":"2","/home/l/verdant/verdant-frontend/src/reportWebVitals.js":"3","/home/l/verdant/verdant-frontend/src/Theme.js":"4","/home/l/verdant/verdant-frontend/src/components/recommenderPage.js":"5","/home/l/verdant/verdant-frontend/src/components/footer.js":"6","/home/l/verdant/verdant-frontend/src/api/VerdantAPI.js":"7","/home/l/verdant/verdant-frontend/src/dialogs/RecommendationsDialog.js":"8","/home/l/verdant/verdant-frontend/src/api/InteractionsBO.js":"9","/home/l/verdant/verdant-frontend/src/api/StockMetadataBO.js":"10","/home/l/verdant/verdant-frontend/src/api/BusinessObject.js":"11"},{"size":500,"mtime":1612188403217,"results":"12","hashOfConfig":"13"},{"size":376,"mtime":1629651393239,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1612028206150,"results":"15","hashOfConfig":"13"},{"size":1670,"mtime":1613831667496,"results":"16","hashOfConfig":"13"},{"size":4235,"mtime":1629651995575,"results":"17","hashOfConfig":"13"},{"size":1452,"mtime":1629651937964,"results":"18","hashOfConfig":"13"},{"size":2224,"mtime":1629561637642,"results":"19","hashOfConfig":"13"},{"size":2449,"mtime":1629651096513,"results":"20","hashOfConfig":"13"},{"size":1134,"mtime":1628867326669,"results":"21","hashOfConfig":"13"},{"size":2376,"mtime":1629559088138,"results":"22","hashOfConfig":"13"},{"size":517,"mtime":1613832902460,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1rwitlo",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/l/verdant/verdant-frontend/src/index.js",[],["50","51"],"/home/l/verdant/verdant-frontend/src/App.js",[],"/home/l/verdant/verdant-frontend/src/reportWebVitals.js",[],"/home/l/verdant/verdant-frontend/src/Theme.js",[],"/home/l/verdant/verdant-frontend/src/components/recommenderPage.js",["52","53"],"import React, { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport VerdantAPI from \"../api/VerdantAPI\";\nimport Button from \"@material-ui/core/Button\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport RecommendationDialog from \"../dialogs/RecommendationsDialog\";\nimport Copyright from \"./footer\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //flexGrow: 1,\n    //minHeight: \"100vh\",\n    //maxHeight: \"100vh\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  searchBar: {\n    width: 500,\n    \"& > * + *\": {\n      marginTop: theme.spacing(3),\n    },\n  },\n}));\n\nexport default function RecommenderLandingPage({}) {\n  const [stocksMetadata, setStocksMetadata] = useState([]);\n  const [error, setError] = useState(null);\n  const classes = useStyles();\n  const [stockChoosen, setChosenStocks] = useState([]);\n  const [prediction, setPrediction] = useState([]);\n  const [loadingInProgress, setLoadingInProgress] = useState(false);\n\n  // dialog handling\n  const [open, setOpen] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(\"analkopf\");\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (value) => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  const getAllStockMetadata = () => {\n    VerdantAPI.getAPI()\n      .getAllStockMetadata()\n      .then((StockMetadata) => {\n        setStocksMetadata(StockMetadata);\n      })\n      .catch((e) => {\n        setError(e);\n        console.log(error);\n      });\n  };\n\n  const sendRequest = (stockList) => {\n    VerdantAPI.getAPI()\n      .getStockPrediction(stockList)\n      .then((respon) => {\n        setPrediction(respon);\n        handleClickOpen();\n        setLoadingInProgress(false);\n      })\n      .catch((e) => {\n        setPrediction(null);\n        setError(e);\n        setLoadingInProgress(false);\n      });\n    setLoadingInProgress(true);\n  };\n\n  const putRequest = () => {\n    if (stockChoosen.length > 2) {\n      var stockList = [];\n      stockChoosen.forEach(function (stock) {\n        var tmp = {\n          id: 1,\n          uuid: \"TEST2\",\n          ticker: stock.getTickerSymbol(),\n          interaction_name: stock.getTickerSymbol(),\n        };\n        stockList.push(tmp);\n      });\n      sendRequest(stockList);\n    } else {\n      alert(\"Select more than 2 stocks\");\n    }\n  };\n\n  useEffect(() => {\n    getAllStockMetadata();\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ minHeight: \"93vh\" }}\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          style={{ minHeight: \"93vh\" }}\n        >\n          <Grid item>\n            <h1>Verdant Stock-Picker Beta</h1>\n          </Grid>\n          <Grid item>\n            <Autocomplete\n              className={classes.searchBar}\n              multiple\n              id=\"tags-standard\"\n              options={stocksMetadata}\n              onChange={(e, v) => setChosenStocks(v)}\n              getOptionLabel={(option) => option.ticker}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  variant=\"standard\"\n                  label=\"Enter your favorite stock symbols\"\n                  placeholder=\"TSLA, AMZN ...\"\n                />\n              )}\n            />\n            {loadingInProgress ? (\n              <>\n                <LinearProgress color=\"secondary\" />\n              </>\n            ) : null}\n          </Grid>\n          <Grid item>\n            <Button onClick={putRequest}>Search</Button>\n          </Grid>\n          <RecommendationDialog\n            selectedValue={selectedValue}\n            open={open}\n            onClose={handleClose}\n            stocks={prediction}\n          />\n        </Grid>\n      </Grid>\n      <Copyright className={classes.root} />\n    </div>\n  );\n}\n","/home/l/verdant/verdant-frontend/src/components/footer.js",["54"],"import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright Â© \"}\n      <Link\n        color=\"inherit\"\n        href=\"https://babylonberlin.eu/film/3622-the-wolf-of-wall-street\"\n      >\n        Verdant Financial\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxHeight: \"5vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">\n            Verdant is a devision of Verdant Financial.\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","/home/l/verdant/verdant-frontend/src/api/VerdantAPI.js",[],"/home/l/verdant/verdant-frontend/src/dialogs/RecommendationsDialog.js",["55","56","57","58","59","60"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { blue } from \"@material-ui/core/colors\";\nimport AccountBalanceIcon from \"@material-ui/icons/AccountBalance\";\nimport ShowChartIcon from \"@material-ui/icons/ShowChart\";\n\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nexport default function RecommendationDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open, stocks } = props;\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    //onClose(value);\n    console.log(value.ticker);\n    openInNewTab(\"https://finance.yahoo.com/quote/\" + value.ticker);\n    //https://finance.yahoo.com/quote/TSLA/\n  };\n\n  const openInNewTab = (url) => {\n    const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n    >\n      <DialogTitle id=\"simple-dialog-title\">\n        Your stock recommendations:\n      </DialogTitle>\n      <List>\n        {stocks.map((stock) => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(stock)}\n            key={stock}\n          >\n            <ListItemAvatar>\n              <Avatar className={classes.avatar}>\n                <ShowChartIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={stock.ticker} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nRecommendationDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\n","/home/l/verdant/verdant-frontend/src/api/InteractionsBO.js",[],"/home/l/verdant/verdant-frontend/src/api/StockMetadataBO.js",[],"/home/l/verdant/verdant-frontend/src/api/BusinessObject.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":31,"column":48,"nodeType":"67","messageId":"68","endLine":31,"endColumn":50},{"ruleId":"69","severity":1,"message":"70","line":100,"column":6,"nodeType":"71","endLine":100,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":14},{"ruleId":"73","severity":1,"message":"78","line":12,"column":8,"nodeType":"75","messageId":"76","endLine":12,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":13,"column":8,"nodeType":"75","messageId":"76","endLine":13,"endColumn":15},{"ruleId":"73","severity":1,"message":"80","line":14,"column":8,"nodeType":"75","messageId":"76","endLine":14,"endColumn":18},{"ruleId":"73","severity":1,"message":"81","line":16,"column":8,"nodeType":"75","messageId":"76","endLine":16,"endColumn":26},{"ruleId":"73","severity":1,"message":"82","line":19,"column":7,"nodeType":"75","messageId":"76","endLine":19,"endColumn":13},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllStockMetadata'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-unused-vars","'CssBaseline' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'AccountBalanceIcon' is defined but never used.","'emails' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getAllStockMetadata]",{"range":"88","text":"89"},[2652,2654],"[getAllStockMetadata]"]